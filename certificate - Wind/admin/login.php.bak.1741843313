<?php
/**
 * Admin Panel - Login Page
 */

// Start session
session_start();


// Include security constants
require_once 'security_header.php';
// Include configuration files
require_once '../config/config.php';
require_once '../config/database.php';
require_once '../includes/functions.php';
require_once '../includes/security.php';

// Connect to database
$database = new Database();
$db = $database->getConnection();

// Check if user is already logged in
if (isLoggedIn()) {
    redirect('index.php');
}

// Initialize variables
$username = '';
$error = '';

// Process login form
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Verify CSRF token
    if (!isset($_POST['csrf_token']) || !validateCSRFToken($_POST['csrf_token'])) {
        $error = 'Security validation failed. Please try again.';
    } else {
        // Get form data
        $username = sanitizeInput($_POST['username']);
        $password = $_POST['password'];
        
        // Validate form data
        if (empty($username) || empty($password)) {
            $error = 'Please enter both username and password';
        } else {
            // Check if account is locked
            $lockStatus = isAccountLocked($username);
            if ($lockStatus !== false) {
                $error = $lockStatus;
            } else {
                // Check if user exists
                $query = "SELECT id, username, password, role, password_change_required, 
                          last_password_change FROM admins 
                          WHERE (username = :username OR email = :email) AND is_active = 1";
                $stmt = $db->prepare($query);
                $stmt->bindParam(':username', $username);
                $stmt->bindParam(':email', $username);
                $stmt->execute();
                
                if ($stmt->rowCount() > 0) {
                    $user = $stmt->fetch(PDO::FETCH_ASSOC);
                    
                    // Verify password
                    if (password_verify($password, $user['password'])) {
                        // Check if password needs to be rehashed
                        if (password_needs_rehash($user['password'], PASSWORD_DEFAULT)) {
                            $newHash = password_hash($password, PASSWORD_DEFAULT);
                            $updateQuery = "UPDATE admins SET password = :password WHERE id = :id";
                            $updateStmt = $db->prepare($updateQuery);
                            $updateStmt->bindParam(':password', $newHash);
                            $updateStmt->bindParam(':id', $user['id']);
                            $updateStmt->execute();
                        }
                        
                        // Check if password change is required
                        $passwordChangeRequired = $user['password_change_required'] == 1;
                        
                        // Check password age if configured
                        if (defined('PASSWORD_MAX_AGE_DAYS') && !empty($user['last_password_change'])) {
                            $lastChange = strtotime($user['last_password_change']);
                            $daysSinceChange = (time() - $lastChange) / (60 * 60 * 24);
                            if ($daysSinceChange > PASSWORD_MAX_AGE_DAYS) {
                                $passwordChangeRequired = true;
                            }
                        }
                        
                        // Reset failed login attempts
                        resetFailedLoginAttempts($username);
                        
                        // Set session variables
                        $_SESSION['user_id'] = $user['id'];
                        $_SESSION['username'] = $user['username'];
                        $_SESSION['role'] = $user['role'];
                        $_SESSION['login_time'] = time();
                        $_SESSION['password_change_required'] = $passwordChangeRequired;
                        
                        // Regenerate session ID to prevent session fixation
                        session_regenerate_id(true);
                        
                        // Update last login time
                        $query = "UPDATE admins SET last_login = NOW() WHERE id = :id";
                        $stmt = $db->prepare($query);
                        $stmt->bindParam(':id', $user['id']);
                        $stmt->execute();
                        
                        // Redirect to dashboard or password change page
                        if ($passwordChangeRequired) {
                            redirect('change_password.php');
                        } else {
                            redirect('index.php');
                        }
                    } else {
                        // Track failed login attempt
                        trackFailedLogin($username);
                        $error = 'Invalid password';
                    }
                } else {
                    // Track failed login attempt even for non-existent users
                    trackFailedLogin($username);
                    $error = 'User not found or account is inactive';
                }
            }
        }
    }
}

// Generate CSRF token for the form
$csrfToken = generateCSRFToken();
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - Certificate Validation System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
    <style>
        html, body {
            height: 100%;
        }
        body {
            display: flex;
            align-items: center;
            padding-top: 40px;
            padding-bottom: 40px;
            background-color: #f5f5f5;
        }
        .form-signin {
            width: 100%;
            max-width: 330px;
            padding: 15px;
            margin: auto;
        }
        .form-signin .form-floating:focus-within {
            z-index: 2;
        }
        .form-signin input[type="text"] {
            margin-bottom: -1px;
            border-bottom-right-radius: 0;
            border-bottom-left-radius: 0;
        }
        .form-signin input[type="password"] {
            margin-bottom: 10px;
            border-top-left-radius: 0;
            border-top-right-radius: 0;
        }
    </style>
</head>
<body class="text-center">
    <main class="form-signin">
        <form method="post" autocomplete="off">
            <img class="mb-4" src="../assets/img/logo.png" alt="Logo" width="72" height="72">
            <h1 class="h3 mb-3 fw-normal">Certificate Admin</h1>
            
            <?php if (!empty($error)): ?>
            <div class="alert alert-danger" role="alert">
                <?php echo $error; ?>
            </div>
            <?php endif; ?>
            
            <div class="form-floating">
                <input type="text" class="form-control" id="username" name="username" placeholder="Username or Email" value="<?php echo htmlspecialchars($username); ?>" required>
                <label for="username">Username or Email</label>
            </div>
            <div class="form-floating">
                <input type="password" class="form-control" id="password" name="password" placeholder="Password" required>
                <label for="password">Password</label>
            </div>
            
            <!-- CSRF Token -->
            <input type="hidden" name="csrf_token" value="<?php echo htmlspecialchars($csrfToken); ?>">
            
            <button class="w-100 btn btn-lg btn-primary" type="submit">Sign in</button>
            <p class="mt-5 mb-3 text-muted">&copy; <?php echo date('Y'); ?> Certificate Validation System</p>
        </form>
    </main>
    
    <!-- Security script to prevent form resubmission -->
    <script>
        if (window.history.replaceState) {
            window.history.replaceState(null, null, window.location.href);
        }
    </script>
</body>
</html>
